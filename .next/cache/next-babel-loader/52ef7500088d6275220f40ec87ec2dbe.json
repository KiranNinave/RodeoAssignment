{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/kiran/Desktop/next/RodeoAssignment/pages/search.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { getSearchMoviesApi } from \"../apis/movieApis\";\nimport InfiniteScroll from \"react-infinite-scroll-component\"; // style\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\"; // style compoents\n\nimport { Container, Row, Col } from \"react-bootstrap\"; // layout\n\nimport Header from \"../layouts/Header\"; // components\n\nimport MovieCard from \"../components/MovieCard\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"onSubmit\", async data => {\n      if (data != \"\") {\n        this.setState({\n          query: data\n        }, async () => {\n          await this.searchMovie(true);\n        });\n      } else {\n        console.log(\"please enter something\");\n      }\n    });\n\n    _defineProperty(this, \"searchMovie\", async (isNew = false) => {\n      try {\n        this.setState({\n          loading: true\n        });\n        const {\n          query,\n          page\n        } = this.state;\n        const response = await getSearchMoviesApi({\n          query,\n          page\n        });\n        this.setState({\n          movies: isNew ? [...response.results] : [...this.state.movies, ...response.results],\n          hasMore: page <= response.total_pages\n        });\n      } catch (err) {\n        console.log(err);\n      } finally {\n        if (this.isComponentMounted) this.setState({\n          loading: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"loadMore\", async () => {\n      if (this.isComponentMounted) {\n        this.setState(prevState => ({\n          page: prevState.page + 1\n        }), async () => await this.searchMovie());\n      }\n    });\n\n    this.state = {\n      hasMore: true,\n      loading: false,\n      movies: [],\n      query: \"\",\n      page: 1\n    };\n    this.isComponentMounted = true;\n  }\n\n  componentWillUnmount() {\n    this.isComponentMounted = false;\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, __jsx(Header, {\n      onSubmit: this.onSubmit,\n      search: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, __jsx(InfiniteScroll, {\n      dataLength: this.state.movies.length //This is important field to render the next data\n      ,\n      next: this.loadMore,\n      hasMore: this.state.hasMore,\n      loader: this.state.movies.length > 0 ? __jsx(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Loading...\") : __jsx(\"div\", {\n        style: {\n          marginTop: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, __jsx(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Search what you like to watch!\")),\n      endMessage: __jsx(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, __jsx(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Yay! You have seen it all\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, __jsx(Row, {\n      style: {\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.movies.map((movie, index) => __jsx(\"div\", {\n      key: movie.id.toString() + index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, __jsx(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, __jsx(MovieCard, {\n      movie: movie,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/kiran/Desktop/next/RodeoAssignment/pages/search.js"],"names":["React","getSearchMoviesApi","InfiniteScroll","Container","Row","Col","Header","MovieCard","Search","Component","constructor","props","e","setState","target","name","value","data","query","searchMovie","console","log","isNew","loading","page","state","response","movies","results","hasMore","total_pages","err","isComponentMounted","prevState","componentWillUnmount","render","onSubmit","length","loadMore","marginTop","textAlign","justifyContent","map","movie","index","id","toString"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AACA,OAAOC,cAAP,MAA2B,iCAA3B,C,CAEA;;AACA,OAAO,sCAAP;AACA,OAAO,oBAAP,C,CAEA;;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,0CAgBJC,CAAC,IAAI;AAClB,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA5B,OAAd;AACD,KAlBkB;;AAAA,sCAoBR,MAAMC,IAAN,IAAc;AACvB,UAAIA,IAAI,IAAI,EAAZ,EAAgB;AACd,aAAKJ,QAAL,CAAc;AAAEK,UAAAA,KAAK,EAAED;AAAT,SAAd,EAA+B,YAAY;AACzC,gBAAM,KAAKE,WAAL,CAAiB,IAAjB,CAAN;AACD,SAFD;AAGD,OAJD,MAIO;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD;AACF,KA5BkB;;AAAA,yCA8BL,OAAOC,KAAK,GAAG,KAAf,KAAyB;AACrC,UAAI;AACF,aAAKT,QAAL,CAAc;AAAEU,UAAAA,OAAO,EAAE;AAAX,SAAd;AACA,cAAM;AAAEL,UAAAA,KAAF;AAASM,UAAAA;AAAT,YAAkB,KAAKC,KAA7B;AACA,cAAMC,QAAQ,GAAG,MAAMzB,kBAAkB,CAAC;AAAEiB,UAAAA,KAAF;AAASM,UAAAA;AAAT,SAAD,CAAzC;AACA,aAAKX,QAAL,CAAc;AACZc,UAAAA,MAAM,EAAEL,KAAK,GACT,CAAC,GAAGI,QAAQ,CAACE,OAAb,CADS,GAET,CAAC,GAAG,KAAKH,KAAL,CAAWE,MAAf,EAAuB,GAAGD,QAAQ,CAACE,OAAnC,CAHQ;AAIZC,UAAAA,OAAO,EAAEL,IAAI,IAAIE,QAAQ,CAACI;AAJd,SAAd;AAMD,OAVD,CAUE,OAAOC,GAAP,EAAY;AACZX,QAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACD,OAZD,SAYU;AACR,YAAI,KAAKC,kBAAT,EAA6B,KAAKnB,QAAL,CAAc;AAAEU,UAAAA,OAAO,EAAE;AAAX,SAAd;AAC9B;AACF,KA9CkB;;AAAA,sCAgDR,YAAY;AACrB,UAAI,KAAKS,kBAAT,EAA6B;AAC3B,aAAKnB,QAAL,CACEoB,SAAS,KAAK;AACZT,UAAAA,IAAI,EAAES,SAAS,CAACT,IAAV,GAAiB;AADX,SAAL,CADX,EAIE,YAAY,MAAM,KAAKL,WAAL,EAJpB;AAMD;AACF,KAzDkB;;AAEjB,SAAKM,KAAL,GAAa;AACXI,MAAAA,OAAO,EAAE,IADE;AAEXN,MAAAA,OAAO,EAAE,KAFE;AAGXI,MAAAA,MAAM,EAAE,EAHG;AAIXT,MAAAA,KAAK,EAAE,EAJI;AAKXM,MAAAA,IAAI,EAAE;AALK,KAAb;AAOA,SAAKQ,kBAAL,GAA0B,IAA1B;AACD;;AAEDE,EAAAA,oBAAoB,GAAG;AACrB,SAAKF,kBAAL,GAA0B,KAA1B;AACD;;AA6CDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,KAAKC,QAAvB;AAAiC,MAAA,MAAM,EAAE,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,cAAD;AACE,MAAA,UAAU,EAAE,KAAKX,KAAL,CAAWE,MAAX,CAAkBU,MADhC,CACwC;AADxC;AAEE,MAAA,IAAI,EAAE,KAAKC,QAFb;AAGE,MAAA,OAAO,EAAE,KAAKb,KAAL,CAAWI,OAHtB;AAIE,MAAA,MAAM,EACJ,KAAKJ,KAAL,CAAWE,MAAX,CAAkBU,MAAlB,GAA2B,CAA3B,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,GAGE;AAAK,QAAA,KAAK,EAAE;AAAEE,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,CARN;AAaE,MAAA,UAAU,EACR;AAAG,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,CAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAmBE,MAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,cAAc,EAAE;AAAlB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKhB,KAAL,CAAWE,MAAX,CAAkBe,GAAlB,CAAsB,CAACC,KAAD,EAAQC,KAAR,KACrB;AAAK,MAAA,GAAG,EAAED,KAAK,CAACE,EAAN,CAASC,QAAT,KAAsBF,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAW,MAAA,KAAK,EAAED,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADD,CADH,CAnBF,CADF,CAFF,CADF;AAoCD;;AAjGkC;;AAoGrC,eAAenC,MAAf","sourcesContent":["import React from \"react\";\nimport { getSearchMoviesApi } from \"../apis/movieApis\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\n// style\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\";\n\n// style compoents\nimport { Container, Row, Col } from \"react-bootstrap\";\n\n// layout\nimport Header from \"../layouts/Header\";\n\n// components\nimport MovieCard from \"../components/MovieCard\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasMore: true,\n      loading: false,\n      movies: [],\n      query: \"\",\n      page: 1\n    };\n    this.isComponentMounted = true;\n  }\n\n  componentWillUnmount() {\n    this.isComponentMounted = false;\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = async data => {\n    if (data != \"\") {\n      this.setState({ query: data }, async () => {\n        await this.searchMovie(true);\n      });\n    } else {\n      console.log(\"please enter something\");\n    }\n  };\n\n  searchMovie = async (isNew = false) => {\n    try {\n      this.setState({ loading: true });\n      const { query, page } = this.state;\n      const response = await getSearchMoviesApi({ query, page });\n      this.setState({\n        movies: isNew\n          ? [...response.results]\n          : [...this.state.movies, ...response.results],\n        hasMore: page <= response.total_pages\n      });\n    } catch (err) {\n      console.log(err);\n    } finally {\n      if (this.isComponentMounted) this.setState({ loading: false });\n    }\n  };\n\n  loadMore = async () => {\n    if (this.isComponentMounted) {\n      this.setState(\n        prevState => ({\n          page: prevState.page + 1\n        }),\n        async () => await this.searchMovie()\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Header onSubmit={this.onSubmit} search={true} />\n        <Container>\n          <InfiniteScroll\n            dataLength={this.state.movies.length} //This is important field to render the next data\n            next={this.loadMore}\n            hasMore={this.state.hasMore}\n            loader={\n              this.state.movies.length > 0 ? (\n                <h4>Loading...</h4>\n              ) : (\n                <div style={{ marginTop: 50 }}>\n                  <h4>Search what you like to watch!</h4>\n                </div>\n              )\n            }\n            endMessage={\n              <p style={{ textAlign: \"center\" }}>\n                <b>Yay! You have seen it all</b>\n              </p>\n            }\n          >\n            <Row style={{ justifyContent: \"center\" }}>\n              {this.state.movies.map((movie, index) => (\n                <div key={movie.id.toString() + index}>\n                  <Col>\n                    <MovieCard movie={movie} />\n                  </Col>\n                </div>\n              ))}\n            </Row>\n          </InfiniteScroll>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}
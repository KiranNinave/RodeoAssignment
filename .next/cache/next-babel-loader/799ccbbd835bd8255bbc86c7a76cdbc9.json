{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/kiran/Desktop/next/RodeoAssignment/pages/search.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { getSearchMoviesApi } from \"../apis/movieApis\";\nimport InfiniteScroll from \"react-infinite-scroll-component\"; // style\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\"; // layout\n\nimport Header from \"../layouts/Header\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"onSubmit\", async data => {\n      e.preventDefault();\n\n      if (this.query != \"\") {\n        await this.searchMovie();\n      } else {\n        console.log(\"please enter something\");\n      }\n    });\n\n    _defineProperty(this, \"searchMovie\", async () => {\n      try {\n        this.setState({\n          loading: true\n        });\n        const {\n          query,\n          page\n        } = this.state;\n        const response = await getSearchMoviesApi({\n          query,\n          page\n        });\n        this.setState({\n          movies: [...this.state.movies, ...response.results],\n          hasMore: page <= response.total_pages\n        });\n      } catch (err) {\n        console.log(err);\n      } finally {\n        if (this.isComponentMounted) this.setState({\n          loading: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"loadMore\", async () => {\n      if (this.isComponentMounted) {\n        this.setState(prevState => ({\n          page: prevState.page + 1\n        }), async () => await this.searchMovie());\n      }\n    });\n\n    this.state = {\n      hasMore: true,\n      loading: false,\n      movies: [],\n      query: \"\",\n      page: 1\n    };\n    this.isComponentMounted = true;\n  }\n\n  componentWillUnmount() {\n    this.isComponentMounted = false;\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, __jsx(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), __jsx(InfiniteScroll, {\n      dataLength: this.state.movies.length //This is important field to render the next data\n      ,\n      next: this.loadMore,\n      hasMore: this.state.hasMore,\n      loader: __jsx(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Loading...\"),\n      endMessage: __jsx(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, __jsx(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Yay! You have seen it all\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.state.movies.map((movie, index) => __jsx(\"div\", {\n      key: movie.id.toString() + index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, movie.title)))));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/kiran/Desktop/next/RodeoAssignment/pages/search.js"],"names":["React","getSearchMoviesApi","InfiniteScroll","Header","Search","Component","constructor","props","e","setState","target","name","value","data","preventDefault","query","searchMovie","console","log","loading","page","state","response","movies","results","hasMore","total_pages","err","isComponentMounted","prevState","componentWillUnmount","render","length","loadMore","textAlign","map","movie","index","id","toString","title"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { getSearchMoviesApi } from \"../apis/movieApis\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\n// style\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\";\n\n// layout\nimport Header from \"../layouts/Header\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasMore: true,\n      loading: false,\n      movies: [],\n      query: \"\",\n      page: 1\n    };\n    this.isComponentMounted = true;\n  }\n\n  componentWillUnmount() {\n    this.isComponentMounted = false;\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = async data => {\n    e.preventDefault();\n    if (this.query != \"\") {\n      await this.searchMovie();\n    } else {\n      console.log(\"please enter something\");\n    }\n  };\n\n  searchMovie = async () => {\n    try {\n      this.setState({ loading: true });\n      const { query, page } = this.state;\n      const response = await getSearchMoviesApi({ query, page });\n      this.setState({\n        movies: [...this.state.movies, ...response.results],\n        hasMore: page <= response.total_pages\n      });\n    } catch (err) {\n      console.log(err);\n    } finally {\n      if (this.isComponentMounted) this.setState({ loading: false });\n    }\n  };\n\n  loadMore = async () => {\n    if (this.isComponentMounted) {\n      this.setState(\n        prevState => ({\n          page: prevState.page + 1\n        }),\n        async () => await this.searchMovie()\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <InfiniteScroll\n          dataLength={this.state.movies.length} //This is important field to render the next data\n          next={this.loadMore}\n          hasMore={this.state.hasMore}\n          loader={<h4>Loading...</h4>}\n          endMessage={\n            <p style={{ textAlign: \"center\" }}>\n              <b>Yay! You have seen it all</b>\n            </p>\n          }\n        >\n          {this.state.movies.map((movie, index) => (\n            <div key={movie.id.toString() + index}>\n              <h3>{movie.title}</h3>\n            </div>\n          ))}\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/kiran/Desktop/next/RodeoAssignment/pages/detail.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Header from \"../layouts/Header\"; // style\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\"; // styled component\n\nimport { Container, Row, Col, Spinner } from \"react-bootstrap\";\nimport { Descriptions, Card } from \"antd\"; // apis\n\nimport { getMovieById } from \"../apis/movieApis\";\n\nvar Detail =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Detail, _React$Component);\n\n  function Detail(props) {\n    var _this;\n\n    _classCallCheck(this, Detail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Detail).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"fetchMovie\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(id) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                _this.setState({\n                  loading: true\n                });\n\n                _context.next = 4;\n                return getMovieById({\n                  id: id\n                });\n\n              case 4:\n                response = _context.sent;\n\n                _this.setState({\n                  movie: response\n                });\n\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 11:\n                _context.prev = 11;\n                if (_this.isComponentMounted) _this.setState({\n                  loading: false\n                });\n                return _context.finish(11);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8, 11, 14]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _this.state = {\n      loading: false,\n      movie: null\n    };\n    _this.isComponentMounted = true;\n    return _this;\n  }\n\n  _createClass(Detail, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var movieId;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                movieId = this.props.query.id;\n                _context2.next = 3;\n                return this.fetchMovie(movieId);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading || !this.state.movie) {\n        return __jsx(\"div\", {\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, __jsx(Spinner, {\n          animation: \"border\",\n          role: \"status\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          className: \"sr-only\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"Loading...\")));\n      }\n\n      var _this$state$movie = this.state.movie,\n          backdrop_path = _this$state$movie.backdrop_path,\n          original_title = _this$state$movie.original_title,\n          original_language = _this$state$movie.original_language,\n          release_date = _this$state$movie.release_date,\n          overview = _this$state$movie.overview,\n          vote_count = _this$state$movie.vote_count,\n          vote_average = _this$state$movie.vote_average,\n          popularity = _this$state$movie.popularity,\n          adult = _this$state$movie.adult,\n          status = _this$state$movie.status,\n          imdb_id = _this$state$movie.imdb_id;\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, __jsx(Header, {\n        search: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), __jsx(Container, {\n        style: {\n          marginTop: 70\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, __jsx(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, __jsx(Col, {\n        sm: 12,\n        md: 4,\n        lg: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: \"https://image.tmdb.org/t/p/w500\".concat(backdrop_path),\n        alt: original_title + \" image\",\n        className: \"img-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), __jsx(Col, {\n        sm: 12,\n        md: 8,\n        lg: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, __jsx(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, __jsx(Descriptions, {\n        title: original_title,\n        bordered: false //   layout=\"vertical\"\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, __jsx(Descriptions.Item, {\n        label: \"Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, original_title), __jsx(Descriptions.Item, {\n        label: \"Release date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, release_date), __jsx(Descriptions.Item, {\n        label: \"Language\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, original_language), __jsx(Descriptions.Item, {\n        label: \"Vote count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, vote_count), __jsx(Descriptions.Item, {\n        label: \"Vote average\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, vote_average, \" /10\"), __jsx(Descriptions.Item, {\n        label: \"Popularity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, popularity), __jsx(Descriptions.Item, {\n        label: \"Adult\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, adult ? \"YES\" : \"NO\"), __jsx(Descriptions.Item, {\n        label: \"Status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, status), __jsx(Descriptions.Item, {\n        label: \"IMDB ID\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, imdb_id), __jsx(Descriptions.Item, {\n        label: \"Overview\",\n        span: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, overview)))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(_ref2) {\n        var query;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                query = _ref2.query;\n                return _context3.abrupt(\"return\", {\n                  query: query\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getInitialProps(_x2) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Detail;\n}(React.Component);\n\nexport { Detail as default };","map":{"version":3,"sources":["/home/kiran/Desktop/next/RodeoAssignment/pages/detail.js"],"names":["React","Header","Container","Row","Col","Spinner","Descriptions","Card","getMovieById","Detail","props","id","setState","loading","response","movie","console","log","isComponentMounted","state","movieId","query","fetchMovie","width","height","display","justifyContent","alignItems","backdrop_path","original_title","original_language","release_date","overview","vote_count","vote_average","popularity","adult","status","imdb_id","marginTop","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Header from \"../layouts/Header\";\n\n// style\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\";\n\n// styled component\nimport { Container, Row, Col, Spinner } from \"react-bootstrap\";\nimport { Descriptions, Card } from \"antd\";\n\n// apis\nimport { getMovieById } from \"../apis/movieApis\";\n\nexport default class Detail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      movie: null\n    };\n    this.isComponentMounted = true;\n  }\n  static async getInitialProps({ query }) {\n    return { query };\n  }\n\n  async componentDidMount() {\n    const movieId = this.props.query.id;\n    await this.fetchMovie(movieId);\n  }\n\n  fetchMovie = async id => {\n    try {\n      this.setState({ loading: true });\n      const response = await getMovieById({ id });\n      this.setState({ movie: response });\n    } catch (err) {\n      console.log(err);\n    } finally {\n      if (this.isComponentMounted) this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    if (this.state.loading || !this.state.movie) {\n      return (\n        <div\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          }}\n        >\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </Spinner>\n        </div>\n      );\n    }\n\n    const {\n      backdrop_path,\n      original_title,\n      original_language,\n      release_date,\n      overview,\n      vote_count,\n      vote_average,\n      popularity,\n      adult,\n      status,\n      imdb_id\n    } = this.state.movie;\n\n    return (\n      <div>\n        <Header search={false} />\n        <Container style={{ marginTop: 70 }}>\n          <Row>\n            <Col sm={12} md={4} lg={4}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${backdrop_path}`}\n                alt={original_title + \" image\"}\n                className=\"img-fluid\"\n              />\n            </Col>\n            <Col sm={12} md={8} lg={8}>\n              <Card>\n                <Descriptions\n                  title={original_title}\n                  bordered={false}\n                  //   layout=\"vertical\"\n                >\n                  <Descriptions.Item label=\"Title\">\n                    {original_title}\n                  </Descriptions.Item>\n                  <Descriptions.Item label=\"Release date\">\n                    {release_date}\n                  </Descriptions.Item>\n                  <Descriptions.Item label=\"Language\">\n                    {original_language}\n                  </Descriptions.Item>\n\n                  <Descriptions.Item label=\"Vote count\">\n                    {vote_count}\n                  </Descriptions.Item>\n                  <Descriptions.Item label=\"Vote average\">\n                    {vote_average} /10\n                  </Descriptions.Item>\n                  <Descriptions.Item label=\"Popularity\">\n                    {popularity}\n                  </Descriptions.Item>\n\n                  <Descriptions.Item label=\"Adult\">\n                    {adult ? \"YES\" : \"NO\"}\n                  </Descriptions.Item>\n                  <Descriptions.Item label=\"Status\">{status}</Descriptions.Item>\n                  <Descriptions.Item label=\"IMDB ID\">\n                    {imdb_id}\n                  </Descriptions.Item>\n\n                  <Descriptions.Item label=\"Overview\" span={3}>\n                    {overview}\n                  </Descriptions.Item>\n                </Descriptions>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
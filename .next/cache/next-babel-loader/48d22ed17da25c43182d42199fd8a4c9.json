{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/kiran/Desktop/next/RodeoAssignment/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { getPopularMoviesApi } from \"../apis/movieApis\";\nimport InfiniteScroll from \"react-infinite-scroll-component\"; // style\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\"; // style compoents\n\nimport { Container, Row, Col } from \"react-bootstrap\"; // layout\n\nimport Header from \"../layouts/Header\"; // compoents\n\nimport MovieCard from \"../components/MovieCard\";\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"fetchMovies\", async () => {\n      try {\n        this.setState({\n          loading: true\n        });\n        const {\n          page\n        } = this.state;\n        const response = await getPopularMoviesApi({\n          page\n        });\n        this.setState({\n          movies: [...this.state.movies, ...response.results],\n          hasMore: page <= response.total_pages\n        });\n      } catch (err) {\n        console.log(err);\n      } finally {\n        if (this.isComponentMounted) this.setState({\n          loading: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"loadMore\", async () => {\n      if (this.isComponentMounted) {\n        this.setState(prevState => ({\n          page: prevState.page + 1\n        }), async () => await this.fetchMovies());\n      }\n    });\n\n    this.state = {\n      hasMore: true,\n      loading: false,\n      page: 1,\n      movies: []\n    };\n    this.isComponentMounted = true;\n  }\n\n  async componentDidMount() {\n    await this.fetchMovies();\n  }\n\n  componentWillUnmount() {\n    this.isComponentMounted = false;\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, __jsx(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), __jsx(Container, {\n      style: {\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, __jsx(InfiniteScroll, {\n      dataLength: this.state.movies.length //This is important field to render the next data\n      ,\n      next: this.loadMore,\n      hasMore: this.state.hasMore,\n      loader: __jsx(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Loading...\"),\n      endMessage: __jsx(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, __jsx(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Yay! You have seen it all\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, __jsx(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.movies.map((movie, index) => __jsx(\"div\", {\n      key: movie.id.toString() + index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, __jsx(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, __jsx(MovieCard, {\n      movie: movie,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["/home/kiran/Desktop/next/RodeoAssignment/pages/index.js"],"names":["React","getPopularMoviesApi","InfiniteScroll","Container","Row","Col","Header","MovieCard","Index","Component","constructor","props","setState","loading","page","state","response","movies","results","hasMore","total_pages","err","console","log","isComponentMounted","prevState","fetchMovies","componentDidMount","componentWillUnmount","render","justifyContent","length","loadMore","textAlign","map","movie","index","id","toString"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { getPopularMoviesApi } from \"../apis/movieApis\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\n// style\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\";\n\n// style compoents\nimport { Container, Row, Col } from \"react-bootstrap\";\n\n// layout\nimport Header from \"../layouts/Header\";\n\n// compoents\nimport MovieCard from \"../components/MovieCard\";\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasMore: true,\n      loading: false,\n      page: 1,\n      movies: []\n    };\n    this.isComponentMounted = true;\n  }\n\n  async componentDidMount() {\n    await this.fetchMovies();\n  }\n\n  componentWillUnmount() {\n    this.isComponentMounted = false;\n  }\n\n  fetchMovies = async () => {\n    try {\n      this.setState({ loading: true });\n      const { page } = this.state;\n      const response = await getPopularMoviesApi({ page });\n      this.setState({\n        movies: [...this.state.movies, ...response.results],\n        hasMore: page <= response.total_pages\n      });\n    } catch (err) {\n      console.log(err);\n    } finally {\n      if (this.isComponentMounted) this.setState({ loading: false });\n    }\n  };\n\n  loadMore = async () => {\n    if (this.isComponentMounted) {\n      this.setState(\n        prevState => ({\n          page: prevState.page + 1\n        }),\n        async () => await this.fetchMovies()\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Header></Header>\n        <Container style={{ justifyContent: \"center\" }}>\n          <InfiniteScroll\n            dataLength={this.state.movies.length} //This is important field to render the next data\n            next={this.loadMore}\n            hasMore={this.state.hasMore}\n            loader={<h4>Loading...</h4>}\n            endMessage={\n              <p style={{ textAlign: \"center\" }}>\n                <b>Yay! You have seen it all</b>\n              </p>\n            }\n          >\n            <Row>\n              {this.state.movies.map((movie, index) => (\n                <div key={movie.id.toString() + index}>\n                  <Col>\n                    <MovieCard movie={movie} />\n                  </Col>\n                </div>\n              ))}\n            </Row>\n          </InfiniteScroll>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}
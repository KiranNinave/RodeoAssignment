{"ast":null,"code":"import { httpMethods, sendJsonRequest } from \"./functions/requests\";\nimport { sendResponse } from \"./functions/responses\";\nexport const getSearchMoviesApi = async (data = {\n  query: \"marvel\",\n  page: 1\n}) => {\n  try {\n    const url = `https://api.themoviedb.org/3/search/movie?query=${data.query}&api_key=b3ecc1e3006dbf3261279644491be766&language=en-US&page=${data.page}`;\n    const response = await sendJsonRequest(url, httpMethods.GET);\n    return await sendResponse(response);\n  } catch (err) {\n    throw new Error(err);\n  }\n};\nexport const getPopularMoviesApi = async (data = {\n  page: 1\n}) => {\n  try {\n    const url = `https://api.themoviedb.org/3/movie/popular?api_key=b3ecc1e3006dbf3261279644491be766&language=en-US&page=${data.page}`;\n    const response = await sendJsonRequest(url, httpMethods.GET);\n    return await sendResponse(response);\n  } catch (err) {\n    throw new Error(err);\n  }\n};\nexport const getMovieById = async (data = {\n  id: 1\n}) => {\n  try {\n    const url = `https://api.themoviedb.org/3/movie/${data.id}?api_key=b3ecc1e3006dbf3261279644491be766&language=en-US`;\n    console.log(url);\n    const response = await sendJsonRequest(url, httpMethods.GET);\n    return await sendResponse(response);\n  } catch (err) {\n    throw new Error(err);\n  }\n};","map":{"version":3,"sources":["/home/kiran/Desktop/next/RodeoAssignment/apis/movieApis.js"],"names":["httpMethods","sendJsonRequest","sendResponse","getSearchMoviesApi","data","query","page","url","response","GET","err","Error","getPopularMoviesApi","getMovieById","id","console","log"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,sBAA7C;AACA,SAASC,YAAT,QAA6B,uBAA7B;AAEA,OAAO,MAAMC,kBAAkB,GAAG,OAChCC,IAAI,GAAG;AAAEC,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,IAAI,EAAE;AAAzB,CADyB,KAE7B;AACH,MAAI;AACF,UAAMC,GAAG,GAAI,mDAAkDH,IAAI,CAACC,KAAM,iEAAgED,IAAI,CAACE,IAAK,EAApJ;AACA,UAAME,QAAQ,GAAG,MAAMP,eAAe,CAACM,GAAD,EAAMP,WAAW,CAACS,GAAlB,CAAtC;AACA,WAAO,MAAMP,YAAY,CAACM,QAAD,CAAzB;AACD,GAJD,CAIE,OAAOE,GAAP,EAAY;AACZ,UAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACD;AACF,CAVM;AAYP,OAAO,MAAME,mBAAmB,GAAG,OAAOR,IAAI,GAAG;AAAEE,EAAAA,IAAI,EAAE;AAAR,CAAd,KAA8B;AAC/D,MAAI;AACF,UAAMC,GAAG,GAAI,2GAA0GH,IAAI,CAACE,IAAK,EAAjI;AACA,UAAME,QAAQ,GAAG,MAAMP,eAAe,CAACM,GAAD,EAAMP,WAAW,CAACS,GAAlB,CAAtC;AACA,WAAO,MAAMP,YAAY,CAACM,QAAD,CAAzB;AACD,GAJD,CAIE,OAAOE,GAAP,EAAY;AACZ,UAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACD;AACF,CARM;AAUP,OAAO,MAAMG,YAAY,GAAG,OAAOT,IAAI,GAAG;AAAEU,EAAAA,EAAE,EAAE;AAAN,CAAd,KAA4B;AACtD,MAAI;AACF,UAAMP,GAAG,GAAI,sCAAqCH,IAAI,CAACU,EAAG,0DAA1D;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMP,eAAe,CAACM,GAAD,EAAMP,WAAW,CAACS,GAAlB,CAAtC;AACA,WAAO,MAAMP,YAAY,CAACM,QAAD,CAAzB;AACD,GALD,CAKE,OAAOE,GAAP,EAAY;AACZ,UAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACD;AACF,CATM","sourcesContent":["import { httpMethods, sendJsonRequest } from \"./functions/requests\";\nimport { sendResponse } from \"./functions/responses\";\n\nexport const getSearchMoviesApi = async (\n  data = { query: \"marvel\", page: 1 }\n) => {\n  try {\n    const url = `https://api.themoviedb.org/3/search/movie?query=${data.query}&api_key=b3ecc1e3006dbf3261279644491be766&language=en-US&page=${data.page}`;\n    const response = await sendJsonRequest(url, httpMethods.GET);\n    return await sendResponse(response);\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\nexport const getPopularMoviesApi = async (data = { page: 1 }) => {\n  try {\n    const url = `https://api.themoviedb.org/3/movie/popular?api_key=b3ecc1e3006dbf3261279644491be766&language=en-US&page=${data.page}`;\n    const response = await sendJsonRequest(url, httpMethods.GET);\n    return await sendResponse(response);\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\nexport const getMovieById = async (data = { id: 1 }) => {\n  try {\n    const url = `https://api.themoviedb.org/3/movie/${data.id}?api_key=b3ecc1e3006dbf3261279644491be766&language=en-US`;\n    console.log(url);\n    const response = await sendJsonRequest(url, httpMethods.GET);\n    return await sendResponse(response);\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
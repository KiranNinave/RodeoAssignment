{"version":3,"file":"static/webpack/static/development/pages/search.js.d14c81d7001908a4eb72.hot-update.js","sources":["webpack:///./pages/search.js"],"sourcesContent":["import React from \"react\";\nimport { getSearchMoviesApi } from \"../apis/movieApis\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport Link from \"next/link\";\n\n// style\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\";\n\n// style compoents\nimport { Container, Row, Col, Spinner } from \"react-bootstrap\";\n\n// layout\nimport Header from \"../layouts/Header\";\n\n// components\nimport MovieCard from \"../components/MovieCard\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasMore: true,\n      loading: false,\n      movies: [],\n      query: \"\",\n      page: 1\n    };\n    this.isComponentMounted = true;\n  }\n\n  componentWillUnmount() {\n    this.isComponentMounted = false;\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = async data => {\n    if (data != \"\") {\n      this.setState({ query: data }, async () => {\n        await this.searchMovie(true);\n      });\n    } else {\n      console.log(\"please enter something\");\n    }\n  };\n\n  searchMovie = async (isNew = false) => {\n    try {\n      if (this.isNew) this.setState({ loading: true });\n\n      const { query, page } = this.state;\n      const response = await getSearchMoviesApi({ query, page });\n      this.setState({\n        movies: isNew\n          ? [...response.results]\n          : [...this.state.movies, ...response.results],\n        hasMore: page <= response.total_pages\n      });\n    } catch (err) {\n      console.log(err);\n    } finally {\n      if (this.isComponentMounted) this.setState({ loading: false });\n    }\n  };\n\n  loadMore = async () => {\n    if (this.isComponentMounted) {\n      this.setState(\n        prevState => ({\n          page: prevState.page + 1\n        }),\n        async () => await this.searchMovie()\n      );\n    }\n  };\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div\n          style={{\n            flex: 1,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"100%\",\n            width: \"100%\"\n          }}\n        >\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </Spinner>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <Header onSubmit={this.onSubmit} search={true} />\n        <Container style={{ marginTop: 70 }}>\n          <InfiniteScroll\n            dataLength={this.state.movies.length} //This is important field to render the next data\n            next={this.loadMore}\n            hasMore={this.state.hasMore}\n            loader={\n              this.state.movies.length > 0 ? (\n                <h4>Loading...</h4>\n              ) : (\n                <div style={{ marginTop: 50 }}>\n                  <h4>Search what you like to watch!</h4>\n                </div>\n              )\n            }\n            endMessage={\n              <p style={{ textAlign: \"center\" }}>\n                <b>Yay! You have seen it all</b>\n              </p>\n            }\n          >\n            <Row style={{ justifyContent: \"center\" }}>\n              {this.state.movies.map((movie, index) => (\n                <div key={movie.id.toString() + index}>\n                  <Link href={`/detail?id=${movie.id}`}>\n                    <Col style={{ cursor: \"pointer\" }}>\n                      <MovieCard movie={movie} />\n                    </Col>\n                  </Link>\n                </div>\n              ))}\n            </Row>\n          </InfiniteScroll>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAiBA;AACA;AACA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AArBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AA8BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAFA;AAAA;AAAA;AAKA;AAAA;AAAA;AACA;AANA;AAKA;AACA;AAAA;AACA;AAGA;AAJA;AACA;AAPA;AAAA;AACA;AADA;AAAA;AAAA;AAaA;AACA;AAdA;AAAA;AAeA;AAAA;AAAA;AAfA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA/BA;AAAA;AAAA;AAAA;AAAA;AAiDA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAAA;AADA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAhDA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AATA;AAUA;AACA;;;AACA;AACA;AACA;;;AA8CA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAcA;;;;AArHA;AACA;AAuHA;;;;A","sourceRoot":""}
{"version":3,"file":"static/webpack/static/development/pages/search.js.1856791650acbebb79f8.hot-update.js","sources":["webpack:///./pages/search.js"],"sourcesContent":["import React from \"react\";\nimport { getSearchMoviesApi } from \"../apis/movieApis\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\n// style\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\";\n\n// layout\nimport Header from \"../layouts/Header\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasMore: true,\n      loading: false,\n      movies: [],\n      query: \"\",\n      page: 1\n    };\n    this.isComponentMounted = true;\n  }\n\n  componentWillUnmount() {\n    this.isComponentMounted = false;\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = async data => {\n    e.preventDefault();\n    if (data != \"\") {\n      await this.searchMovie(data);\n    } else {\n      console.log(\"please enter something\");\n    }\n  };\n\n  searchMovie = async data => {\n    try {\n      this.setState({ loading: true });\n      const { page } = this.state;\n      const query = data;\n      const response = await getSearchMoviesApi({ query, page });\n      this.setState({\n        movies: [...this.state.movies, ...response.results],\n        hasMore: page <= response.total_pages\n      });\n    } catch (err) {\n      console.log(err);\n    } finally {\n      if (this.isComponentMounted) this.setState({ loading: false });\n    }\n  };\n\n  loadMore = async () => {\n    if (this.isComponentMounted) {\n      this.setState(\n        prevState => ({\n          page: prevState.page + 1\n        }),\n        async () => await this.searchMovie()\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Header onSubmit={this.onSubmit} search={true} />\n        <InfiniteScroll\n          dataLength={this.state.movies.length} //This is important field to render the next data\n          next={this.loadMore}\n          hasMore={this.state.hasMore}\n          loader={<h4>Loading...</h4>}\n          endMessage={\n            <p style={{ textAlign: \"center\" }}>\n              <b>Yay! You have seen it all</b>\n            </p>\n          }\n        >\n          {this.state.movies.map((movie, index) => (\n            <div key={movie.id.toString() + index}>\n              <h3>{movie.title}</h3>\n            </div>\n          ))}\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAiBA;AACA;AACA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAKA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AArBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAJA;AAAA;AAKA;AAAA;AAAA;AACA;AANA;AAKA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAPA;AAAA;AACA;AADA;AAAA;AAAA;AAWA;AACA;AAZA;AAAA;AAaA;AAAA;AAAA;AAbA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA9BA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AA8CA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAAA;AADA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA7CA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AATA;AAUA;AACA;;;AACA;AACA;AACA;;;AA2CA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAQA;;;;AAjFA;AACA;AAmFA;;;;A","sourceRoot":""}
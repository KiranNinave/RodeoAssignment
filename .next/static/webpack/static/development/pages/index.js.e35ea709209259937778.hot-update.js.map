{"version":3,"file":"static/webpack/static/development/pages/index.js.e35ea709209259937778.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from \"react\";\nimport { getPopularMoviesApi } from \"../apis/movieApis\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\n// style\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\";\n\n// style compoents\nimport { Container, Row, Col } from \"react-bootstrap\";\n\n// layout\nimport Header from \"../layouts/Header\";\n\n// compoents\nimport MovieCard from \"../components/MovieCard\";\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasMore: true,\n      loading: false,\n      page: 1,\n      movies: []\n    };\n    this.isComponentMounted = true;\n  }\n\n  async componentDidMount() {\n    await this.fetchMovies();\n  }\n\n  componentWillUnmount() {\n    this.isComponentMounted = false;\n  }\n\n  fetchMovies = async () => {\n    try {\n      this.setState({ loading: true });\n      const { page } = this.state;\n      const response = await getPopularMoviesApi({ page });\n      this.setState({\n        movies: [...this.state.movies, ...response.results],\n        hasMore: page <= response.total_pages\n      });\n    } catch (err) {\n      console.log(err);\n    } finally {\n      if (this.isComponentMounted) this.setState({ loading: false });\n    }\n  };\n\n  loadMore = async () => {\n    if (this.isComponentMounted) {\n      this.setState(\n        prevState => ({\n          page: prevState.page + 1\n        }),\n        async () => await this.fetchMovies()\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Header></Header>\n        <Container>\n          <InfiniteScroll\n            dataLength={this.state.movies.length} //This is important field to render the next data\n            next={this.loadMore}\n            hasMore={this.state.hasMore}\n            loader={<h4>Loading...</h4>}\n            endMessage={\n              <p style={{ textAlign: \"center\" }}>\n                <b>Yay! You have seen it all</b>\n              </p>\n            }\n          >\n            <Row style={{ justifyContent: \"center\" }}>\n              {this.state.movies.map((movie, index) => (\n                <div key={movie.id.toString() + index}>\n                  <Col>\n                    <MovieCard movie={movie} />\n                  </Col>\n                </div>\n              ))}\n            </Row>\n          </InfiniteScroll>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAHA;AAAA;AAIA;AAAA;AACA;AALA;AAIA;AACA;AAAA;AACA;AACA;AAFA;AACA;AANA;AAAA;AACA;AADA;AAAA;AAAA;AAUA;AACA;AAXA;AAAA;AAYA;AAAA;AAAA;AAZA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAmCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAAA;AADA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAlCA;AACA;AACA;AACA;AACA;AAJA;AAMA;AARA;AASA;AACA;;;;;;;;;;;;AAEA;AACA;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;;;AA6BA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAYA;;;;AA5EA;AACA;AA8EA;;;;A","sourceRoot":""}